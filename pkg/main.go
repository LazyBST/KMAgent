// Code generated by "go.opentelemetry.io/collector/cmd/builder".

// Program kmagent is an OpenTelemetry Collector binary.
package main

import (
	"fmt"
	"log"

	"github.com/kardianos/service"
	"github.com/lazybst/kmagent/pkg/utils"
	"go.opentelemetry.io/collector/otelcol"
)

var (
	CONFIG_PATH       = "/tmp/otelcol.yaml"
	CONFIG_SVC_ORIGIN = "http://localhost:3000"
	RUN_AS_SERVICE    = false
)

var collector *otelcol.Collector

func main() {
	CONFIG_PATH, CONFIG_SVC_ORIGIN, RUN_AS_SERVICE = utils.GetEnvFlags()

	svcConfig := &service.Config{
		Name: "kmagent",
		Arguments: []string{
			fmt.Sprintf("-%s=%s", utils.CONFIG_FILE_PATH_FLAG, CONFIG_PATH),
			fmt.Sprintf("-%s=%s", utils.CONFIG_SERVICE_ORIGIN_URL_FLAG, CONFIG_SVC_ORIGIN),
		},
		Option: service.KeyValue{
			"UserService":  true,
			"LogOutput":    true,
			"LogDirectory": "/tmp",
		},
	}
	agent := &agent{}
	s, err := service.New(agent, svcConfig)
	if err != nil {
		log.Fatal(err)
	}
	err = s.Run()
	if err != nil {
		log.Fatal(err)
	}
}
